steps:
- task: PowerShell@2
  displayName: 'Preparing Combine Modules into Single Artifact'
  inputs:
    targetType: filePath
    filePath: './build-pipelines/Combine-Packages.ps1'
    arguments: '-OutputDirectory $(Artifacts_CombinedOutputDirectory_Full) -InputDirectory $(Artifacts.OutputDirectory.Web) -Version $(Version.Full)'

- task: DownloadPackage@1
  displayName: 'Download Toolcore Publishing Service'
  inputs:
    feed: '$(System.TeamProject)/$(Sitecore_PackageFeed)'
    definition: 'Toolcore.Publishing.Service'
    version: 7.0.0
    packageType: 'nuget'
    downloadPath: '$(Artifacts_CombinedOutputDirectory_Full)'

- powershell: |
   Remove-Item -Path $(Artifacts_CombinedOutputDirectory_Full)\[Content_Types].xml -Force
   Remove-Item -Path $(Artifacts_CombinedOutputDirectory_Full)\_rels -Force -Recurse
   Remove-Item -Path $(Artifacts_CombinedOutputDirectory_Full)\package -Force -Recurse
   Remove-Item -Path $(Artifacts_CombinedOutputDirectory_Full)\Toolcore.Publishing.Service.nuspec -Force
   Rename-Item -Path $(Artifacts_CombinedOutputDirectory_Full)\Web.config-RELEASE.xdt -NewName $(Artifacts_CombinedOutputDirectory_Full)\Web.config.xdt -Force
   Rename-Item -Path $(Artifacts_CombinedOutputDirectory_Full)\App_Config\ConnectionStrings.config-RELEASE.xdt -NewName $(Artifacts_CombinedOutputDirectory_Full)\App_Config\ConnectionStrings.config.xdt -Force
   mkdir $(Artifacts_PublishingOutputDirectory_Full) -Force
   Move-Item -Path $(Artifacts.OutputDirectory.Web)\GECU.Foundation.PublishingService.*.nupkg -Destination $(Artifacts_PublishingOutputDirectory_Full)\PublishingService.zip -Force
   Expand-Archive $(Artifacts_PublishingOutputDirectory_Full)\PublishingService.zip -DestinationPath $(Artifacts_PublishingOutputDirectory_Full)
   Remove-Item -Path $(Artifacts_PublishingOutputDirectory_Full)\PublishingService.zip
  displayName: 'Remove AutoGenerated Extras'

- task: Docker@2
  displayName: 'Perform ACR Login'
  inputs:
    containerRegistry: '$(container_registry)'
    command: login

- task: DockerCompose@0
  displayName: 'Run a Docker Compose command'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: '$(container_registry)'
    dockerComposeFile: 'docker-compose_Release.yml'
    dockerComposeCommand: build

- powershell: |
   docker images
   docker tag $(REGISTRY)$(PROJECT_NAME)-xp1-sxa-cm:$(PREPARED_VERSION) $(REGISTRY)$(PROJECT_NAME)-xp1-sxa-cm:$(Version.Full)
   docker tag $(REGISTRY)$(PROJECT_NAME)-xp1-sxa-cd:$(PREPARED_VERSION) $(REGISTRY)$(PROJECT_NAME)-xp1-sxa-cd:$(Version.Full)
   docker tag $(REGISTRY)$(PROJECT_NAME)-sps:$(PREPARED_VERSION) $(REGISTRY)$(PROJECT_NAME)-sps:$(Version.Full)
   Set-Content -Path $(Build.ArtifactStagingDirectory)\build.txt -Value $(Version.Full) 
  displayName: 'Check and Tag Images'

- task: Docker@2
  displayName: 'Perform Push For Built CM Image To ACR'
  inputs:
    containerRegistry: '$(container_registry)'
    repository: '$(PROJECT_NAME)-xp1-sxa-cm'
    command: push
    tags: |
     $(Version.Full)
     $(PREPARED_VERSION)

- task: Docker@2
  displayName: 'Perform Push For Built CD Image To ACR'
  inputs:
    containerRegistry: '$(container_registry)'
    repository: '$(PROJECT_NAME)-xp1-sxa-cd'
    command: push
    tags: |
     $(Version.Full)
     $(PREPARED_VERSION)

- task: Docker@2
  displayName: 'Perform Push For Built SPS Image To ACR'
  inputs:
    containerRegistry: '$(container_registry)'
    repository: '$(PROJECT_NAME)-sps'
    command: push
    tags: |
     $(Version.Full)
     $(PREPARED_VERSION)

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
